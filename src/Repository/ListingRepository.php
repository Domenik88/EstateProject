<?php

namespace App\Repository;

use App\Entity\Listing;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\Persistence\ManagerRegistry;

/**
 * @method Listing|null find($id, $lockMode = null, $lockVersion = null)
 * @method Listing|null findOneBy(array $criteria, array $orderBy = null)
 * @method Listing[]    findAll()
 * @method Listing[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 */
class ListingRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, Listing::class);
    }

    public function count(array $criteria)
    {
        return parent::count($criteria); // TODO: Change the autogenerated stub
    }

    public function updateDdfDeletedListings()
    {
        $dateNow = new \DateTime();
        $this->getEntityManager()->createQuery("UPDATE App\Entity\Listing l SET l.deletedDate = '{$dateNow->format('Y-m-d H:i:s')}' where l.feedID = 'ddf' and not exists (select lm.feedListingId from App\Entity\ListingMaster lm where lm.feedListingId = l.feedListingID and lm.feedId = l.feedID)")->execute();
    }

    public function getMissingListingsFromDdfListingMaster()
    {
        return $this->getEntityManager()->createQuery("SELECT lm FROM App\Entity\ListingMaster lm where lm.feedId = 'ddf' and not exists (select l from App\Entity\Listing l where l.feedListingID = lm.feedListingId and l.feedID = lm.feedId and l.deletedDate IS NULL)")->getResult();
    }
}
